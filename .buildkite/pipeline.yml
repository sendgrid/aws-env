steps:
  # Changes to this variable will change whether or not your branch is
  # promoted and uploaded.
  # true = all commits will be packaged and uploaded to repository
  # servers (without merging to master), but not deployed.
  #
  # false = master commits only will be packed and uploaded to repository
  # servers, but not deployed
  - label: 'set promote for stage'
    command:
      - 'buildkite-agent meta-data set PROMOTEFORSTAGE `echo false`'
    branches: '!master'

  - wait

  # The purpose of the status check script is to add a comment to your
  # pull requests that indicates whether or not this PR is ready to merge.
  # If your repo is part of the SOX or SOC2 audit, do not remove this!
  - label: 'status_check'
    command: 'workflow status_checks'
    branches: '!master'

  # The purpose of this script is to determine what version you are
  # attempting to bump to.  This script will then write out that version
  # into a file named 'version_wf', which will be used by the build system
  # to create pull requests, and your app itself may use the file as well.
  - label: 'prebuild_determine_version'
    env:
      # Use automatic versioning.
      AUTOTAGREPO: true
    command:
      - 'workflow prebuild_determine_version'
      # We set VERSION_WF here in BuildKite metadata and consume it via
      # pipeline hooks in every other step. If we don't do this,
      # then version_wf will be missing.
      - 'buildkite-agent meta-data set VERSION_WF `cat version_wf`'

  - wait

  ##############################
  # Build, Test, Lint
  ##############################
  - label: 'Build Binary'
    command: 'make artifact'
    artifact_paths: 'aws-env'

  - label: 'Unit Tests & Code Coverage'
    command: 'make test && make report'
    artifact_paths: 'coverage.html'

  - label: 'Lint'
    command: 'make lint'

  - wait


  ##############################
  # Push Docker Image
  ##############################

  # On non-master builds, push latest and a pre-tagged version
  - label: 'Build, Tag, & Push Pre-Image'
    command: 'make build-docker && make push && make push-pre-tagged'
    branches: '!master'

  # On master builds, push the versioned image
  - label: 'Build, Tag, & Push Image'
    command: 'make build-docker && make push && make push-tagged'
    branches: 'master'

  - wait

  ##############################
  # Package and Publish
  ##############################

  # On master builds, push the versioned image
  - label: 'Release :shipit:'
    command:
      - 'mkdir build'
      - 'buildkite-agent artifact download aws-env build/'
      - 'make release'
    branches: 'master'

  - wait

  ##############################
  # Post-Publish
  ##############################

  - label: ':beer: tap'
    branches: master
    commands: |
      #!/bin/bash -e
      git clean -ffxdq
      docker run -t --rm --privileged \
       -v $$PWD:/src/github.com/sendgrid/aws-env \
       -w /src/github.com/sendgrid/aws-env \
       -e GITHUB_TOKEN=$$WF_GITHUB_TOKEN \
       goreleaser/goreleaser:v0.142.0 release
